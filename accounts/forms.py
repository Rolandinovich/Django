from django import formsfrom django.contrib.auth.forms import AuthenticationForm, UserChangeForm, UserCreationFormfrom accounts.models import Accountimport random, hashlibfrom accounts.models import AccountProfileclass AccountLoginForm(AuthenticationForm):    username = forms.CharField(label='Логин')    class Meta:        model = Account        fields = ('username', 'password')    def __init__(self, *args, **kwargs):        super(AccountLoginForm, self).__init__(*args, **kwargs)        for field_name, field in self.fields.items():            field.widget.attrs['class'] = 'form-control'            field.help_text = ''class AccountRegisterForm(UserCreationForm):    username = forms.CharField(label='Логин')    class Meta:        model = Account        fields = ('username', 'first_name', 'password1', 'password2', 'email', 'age', 'avatar')    def __init__(self, *args, **kwargs):        super(AccountRegisterForm, self).__init__(*args, **kwargs)        for field_name, field in self.fields.items():            field.widget.attrs['class'] = 'form-control'            field.help_text = ''    def clean_age(self):        data = self.cleaned_data['age']        if data < 18:            raise forms.ValidationError("Вы слишком молоды!")        return data    def save(self):        user = super(AccountRegisterForm, self).save()        # изменить на false при почтовой авторизации        user.is_active = True        salt = hashlib.sha1(str(random.random()).encode('utf8')).hexdigest()[:6]        user.activation_key = hashlib.sha1((user.email + salt).encode('utf8')).hexdigest()        user.save()        return userclass AccountEditForm(UserChangeForm):    username = forms.CharField(label='Логин')    class Meta:        model = Account        fields = ('username', 'first_name', 'email', 'age', 'avatar', 'password')    def __init__(self, *args, **kwargs):        super(AccountEditForm, self).__init__(*args, **kwargs)        for field_name, field in self.fields.items():            field.widget.attrs['class'] = 'form-control'            field.help_text = ''            if field_name == 'password':                field.widget = forms.HiddenInput()    def clean_age(self):        data = self.cleaned_data['age']        if data < 18:            raise forms.ValidationError("Вы слишком молоды!")        return dataclass AccountProfileEditForm(forms.ModelForm):    class Meta:        model = AccountProfile        fields = ('tagline', 'aboutMe', 'gender')    def __init__(self, *args, **kwargs):        super(AccountProfileEditForm, self).__init__(*args, **kwargs)        for field_name, field in self.fields.items():            field.widget.attrs['class'] = 'form-control'